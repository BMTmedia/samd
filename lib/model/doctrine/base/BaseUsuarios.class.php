<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Usuarios', 'doctrine');

/**
 * BaseUsuarios
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cedula
 * @property string $nombre
 * @property string $apellido
 * @property date $fecha_nac
 * @property string $username
 * @property string $password
 * @property integer $company_id
 * @property integer $rol_id
 * 
 * @method integer  getCedula()     Returns the current record's "cedula" value
 * @method string   getNombre()     Returns the current record's "nombre" value
 * @method string   getApellido()   Returns the current record's "apellido" value
 * @method date     getFechaNac()   Returns the current record's "fecha_nac" value
 * @method string   getUsername()   Returns the current record's "username" value
 * @method string   getPassword()   Returns the current record's "password" value
 * @method integer  getCompanyId()  Returns the current record's "company_id" value
 * @method integer  getRolId()      Returns the current record's "rol_id" value
 * @method Usuarios setCedula()     Sets the current record's "cedula" value
 * @method Usuarios setNombre()     Sets the current record's "nombre" value
 * @method Usuarios setApellido()   Sets the current record's "apellido" value
 * @method Usuarios setFechaNac()   Sets the current record's "fecha_nac" value
 * @method Usuarios setUsername()   Sets the current record's "username" value
 * @method Usuarios setPassword()   Sets the current record's "password" value
 * @method Usuarios setCompanyId()  Sets the current record's "company_id" value
 * @method Usuarios setRolId()      Sets the current record's "rol_id" value
 * 
 * @package    samd
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuarios extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuarios');
        $this->hasColumn('cedula', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('apellido', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('fecha_nac', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('username', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('password', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('company_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('rol_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}